{"version":3,"sources":["Components/Message/MessageForm.module.css","Components/Message/MessageList.module.css","Components/Message/MessageItem.module.css","Components/Message/MessageForm.js","Components/Message/MessageItem.js","Components/Message/MessageList.js","Pages/Message/Message.js","hooks/useChange.js","Components/UI/Input/Input.js","Components/UI/Input/Input.module.css"],"names":["module","exports","MessageForm","props","useChange","msgValue","value","msgChangeHandler","valueChangeHandler","setMsgValue","setValue","useHttp","isLoading","error","sendMessageFormRequest","sendRequest","clearError","messageFormSubmitHandler","e","a","preventDefault","process","JSON","stringify","creatorId","userData","id","message","Authorization","token","data","onAddMessage","ErrorModal","onClose","text","onlyBack","overlay","onSubmit","Input","textarea","placeholder","name","rows","onChange","msg","className","classes","Button","type","MessageItem","classname","username","own","MessageList","msgEndRef","useRef","messages","useEffect","current","scrollIntoView","behavior","length","totalPages","page","center","inverse","onClick","onPrev","map","m","onNext","ref","Message","useState","setMessages","setPage","setTotalPages","fetchMessages","authCtx","useContext","AuthContext","fetchRequest","sort","b","Date","createdAt","getTime","io","on","prev","LoadingSpinner","val","useCallback","target","input","htmlFor","for","label","dual","forOne","labelOne","typeOne","onChangeOne","valueOne","forTwo","labelTwo","typeTwo","onChangeTwo","valueTwo"],"mappings":"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","file":"static/js/5.796dedfd.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"message-form\":\"MessageForm_message-form__S3R8e\",\"message-form__actions\":\"MessageForm_message-form__actions__2Kyl-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message-list__items\":\"MessageList_message-list__items__2exG8\",\"message-error__text\":\"MessageList_message-error__text__mIE98\",\"center\":\"MessageList_center__2zBoh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"msg-list__item\":\"MessageItem_msg-list__item__1-LrI\",\"msg-list__item-container\":\"MessageItem_msg-list__item-container__1luOY\",\"own\":\"MessageItem_own__3aZkM\"};","import React from 'react';\r\n\r\nimport classes from './MessageForm.module.css';\r\nimport Button from '../UI/Button';\r\nimport Input from '../UI/Input/Input';\r\nimport useChange from '../../hooks/useChange';\r\nimport useHttp from '../../hooks/useHttp';\r\nimport ErrorModal from '../UI/ErrorModal/ErrorModal';\r\n\r\nconst MessageForm = (props) => {\r\n  const {\r\n    value: msgValue,\r\n    valueChangeHandler: msgChangeHandler,\r\n    setValue: setMsgValue,\r\n  } = useChange();\r\n\r\n  const {\r\n    isLoading,\r\n    error,\r\n    sendRequest: sendMessageFormRequest,\r\n    clearError,\r\n  } = useHttp();\r\n\r\n  const messageFormSubmitHandler = async (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      const data = await sendMessageFormRequest(\r\n        `${process.env.REACT_APP_BACKEND_URL}/messages`,\r\n        'POST',\r\n        JSON.stringify({\r\n          creatorId: props.userData.id,\r\n          message: msgValue,\r\n        }),\r\n        {\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Bearer ${props.token}`,\r\n        }\r\n      );\r\n\r\n      props.onAddMessage({\r\n        ...data.message,\r\n      });\r\n    } catch (Err) {}\r\n\r\n    setMsgValue('');\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {error && (\r\n        <ErrorModal onClose={clearError} text={error} onlyBack overlay />\r\n      )}\r\n      <form onSubmit={messageFormSubmitHandler}>\r\n        <Input\r\n          textarea\r\n          placeholder={`Write a message, ${props.userData.name}`}\r\n          rows=\"5\"\r\n          onChange={msgChangeHandler}\r\n          value={msgValue}\r\n          msg\r\n        />\r\n        <div className={classes['message-form__actions']}>\r\n          <Button type=\"submit\">\r\n            {isLoading ? 'Sending' : 'Send Message'}\r\n          </Button>\r\n        </div>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MessageForm;\r\n","import React from 'react';\r\n\r\nimport classes from './MessageItem.module.css';\r\n\r\nconst MessageItem = (props) => {\r\n  const { name } = props;\r\n\r\n  const classname =\r\n    name !== props.username\r\n      ? `${classes['msg-list__item-container']}`\r\n      : `${classes['msg-list__item-container']} ${classes.own}`;\r\n\r\n  return (\r\n    <li className={classes['msg-list__item']}>\r\n      <div className={classname}>\r\n        <h4>{props.name}</h4>\r\n        <p>{props.message}</p>\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default MessageItem;\r\n","import React, { useEffect, useRef } from 'react';\r\n\r\nimport classes from './MessageList.module.css';\r\nimport MessageItem from './MessageItem';\r\nimport Button from '../UI/Button';\r\n\r\nconst MessageList = (props) => {\r\n  const msgEndRef = useRef();\r\n\r\n  const { messages } = props;\r\n\r\n  useEffect(() => {\r\n    if (messages) {\r\n      msgEndRef.current.scrollIntoView({ behavior: 'smooth' });\r\n    }\r\n  });\r\n\r\n  return (\r\n    <ul className={classes['message-list__items']}>\r\n      {props.messages.length > 0 && props.totalPages !== props.page && (\r\n        <div className={classes.center}>\r\n          <Button\r\n            inverse\r\n            onClick={() => {\r\n              props.onPrev();\r\n            }}\r\n          >\r\n            Prev\r\n          </Button>\r\n        </div>\r\n      )}\r\n\r\n      {props.messages.length > 0 &&\r\n        props.messages.map((m) => {\r\n          return (\r\n            <MessageItem\r\n              key={m.id}\r\n              id={m.id}\r\n              message={m.message}\r\n              name={m.creatorId.name}\r\n              username={props.username}\r\n            />\r\n          );\r\n        })}\r\n\r\n      {props.messages.length === 0 && (\r\n        <h1 className={classes['message-error__text']}>No Messages Found</h1>\r\n      )}\r\n      {props.messages.length > 0 && props.page > 1 && (\r\n        <div className={classes.center}>\r\n          <Button\r\n            inverse\r\n            onClick={() => {\r\n              props.onNext();\r\n            }}\r\n          >\r\n            Next\r\n          </Button>\r\n        </div>\r\n      )}\r\n\r\n      <div ref={msgEndRef}></div>\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default MessageList;\r\n","import React, { useContext, useEffect, useState } from 'react';\r\nimport { io } from 'socket.io-client';\r\n\r\nimport MessageForm from '../../Components/Message/MessageForm';\r\nimport MessageList from '../../Components/Message/MessageList';\r\nimport useHttp from '../../hooks/useHttp';\r\nimport ErrorModal from '../../Components/UI/ErrorModal/ErrorModal';\r\nimport LoadingSpinner from '../../Components/UI/LoadingSpinner/LoadingSpinner';\r\nimport { AuthContext } from '../../store/auth-context';\r\n\r\nconst Message = () => {\r\n  const [messages, setMessages] = useState([]);\r\n  const [page, setPage] = useState(1);\r\n  const [totalPages, setTotalPages] = useState(1);\r\n\r\n  const {\r\n    isLoading,\r\n    error,\r\n    sendRequest: fetchMessages,\r\n    clearError,\r\n  } = useHttp();\r\n\r\n  const authCtx = useContext(AuthContext);\r\n\r\n  const { token } = authCtx;\r\n\r\n  useEffect(() => {\r\n    const fetchRequest = async () => {\r\n      try {\r\n        const data = await fetchMessages(\r\n          `${process.env.REACT_APP_BACKEND_URL}/messages/?page=${page}`,\r\n          'GET',\r\n          null,\r\n          { Authorization: `Bearer ${token}` }\r\n        );\r\n\r\n        setTotalPages(data.totalPages);\r\n        setMessages([\r\n          ...data.messages.sort(\r\n            (a, b) =>\r\n              new Date(a.createdAt).getTime() - new Date(b.createdAt).getTime()\r\n          ),\r\n        ]);\r\n      } catch (err) {}\r\n    };\r\n\r\n    fetchRequest();\r\n  }, [fetchMessages, page, token]);\r\n\r\n  const loadPrevMsgHandler = () => {\r\n    setPage((prev) => (prev <= totalPages ? prev + 1 : prev));\r\n  };\r\n\r\n  const loadNextMsgHandler = () => {\r\n    setPage((prev) => (prev > 1 ? prev - 1 : prev));\r\n  };\r\n\r\n  useEffect(() => {\r\n    const socket = io(process.env.REACT_APP_ASSET_URL);\r\n    socket.on('new-message', (message) => {\r\n      if (message) {\r\n        setMessages((prev) => [...prev, { ...message.message }]);\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {error && (\r\n        <ErrorModal onClose={clearError} text={error} onlyBack overlay />\r\n      )}\r\n      {isLoading && <LoadingSpinner center />}\r\n      <MessageList\r\n        messages={messages}\r\n        username={authCtx.userData.name}\r\n        onPrev={loadPrevMsgHandler}\r\n        onNext={loadNextMsgHandler}\r\n        isLoading={isLoading}\r\n        page={page}\r\n        totalPages={totalPages}\r\n      />\r\n      <MessageForm userData={authCtx.userData} token={token} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Message;\r\n","import { useCallback, useState } from 'react';\r\n\r\nconst useChange = (val = '') => {\r\n  const [value, setValue] = useState(val);\r\n\r\n  const valueChangeHandler = useCallback((e) => {\r\n    setValue(e.target.value);\r\n  }, []);\r\n\r\n  return { value, valueChangeHandler, setValue };\r\n};\r\n\r\nexport default useChange;\r\n","import React from 'react';\r\nimport classes from './Input.module.css';\r\n\r\nconst Input = (props) => {\r\n  let input = (\r\n    <>\r\n      <label htmlFor={props.for}>{props.label}</label>\r\n      <input\r\n        type={props.type || 'text'}\r\n        onChange={props.onChange}\r\n        value={props.value}\r\n        placeholder={props.placeholder}\r\n      />\r\n    </>\r\n  );\r\n\r\n  if (props.textarea) {\r\n    input = (\r\n      <>\r\n        <label htmlFor={props.for}>{props.label}</label>\r\n        <textarea\r\n          type={props.type || 'text'}\r\n          rows={props.rows || 3}\r\n          onChange={props.onChange}\r\n          value={props.value}\r\n          placeholder={props.placeholder}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n\r\n  if (props.dual) {\r\n    input = (\r\n      <>\r\n        <div className={classes['input-container__dual-div']}>\r\n          <label htmlFor={props.forOne}>{props.labelOne}</label>\r\n          <input\r\n            type={props.typeOne || 'text'}\r\n            onChange={props.onChangeOne}\r\n            value={props.valueOne}\r\n            placeholder={props.placeholder}\r\n          />\r\n        </div>\r\n        <div className={classes['input-container__dual-div']}>\r\n          <label htmlFor={props.forTwo}>{props.labelTwo}</label>\r\n          <input\r\n            type={props.typeTwo || 'text'}\r\n            onChange={props.onChangeTwo}\r\n            value={props.valueTwo}\r\n            placeholder={props.placeholder}\r\n          />\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className={\r\n        props.dual\r\n          ? classes['input-container__dual']\r\n          : `${classes['input-container']} ${props.msg && classes.msg}`\r\n      }\r\n    >\r\n      {input}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input-container\":\"Input_input-container__3uy4l\",\"input-container__dual\":\"Input_input-container__dual__1HZ6I\",\"input-container__dual-div\":\"Input_input-container__dual-div__nEqMd\",\"msg\":\"Input_msg__1eA6Y\"};"],"sourceRoot":""}