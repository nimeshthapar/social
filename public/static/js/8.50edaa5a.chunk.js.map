{"version":3,"sources":["Components/profile/Profile.module.css","Components/profile/UpdateProfile.module.css","Components/profile/UpdateProfile.js","Components/profile/ProfileText.js","Components/profile/Profile.js","Pages/Profile/Profile.js"],"names":["module","exports","UpdateProfile","props","useChange","profile","bio","bioValue","value","bioChangeHandler","valueChangeHandler","relationship","relationshipValue","relationshipChangeHandler","at","atValue","atChangeHandler","occupation","occupationValue","occupationChangeHandler","school","schoolValue","schoolChangeHandler","college","collegeValue","collegeChangeHandler","useHttp","isLoading","error","sendUpdateProfileRequest","sendRequest","clearError","submitProfileHandler","e","a","preventDefault","process","id","JSON","stringify","Authorization","token","onUpdate","onClose","Modal","header","footer","Button","onClick","danger","type","inverse","footerClass","classes","onSubmit","ErrorModal","text","onlyBack","overlay","Input","for","label","onChange","dual","forOne","labelOne","valueOne","onChangeOne","forTwo","labelTwo","valueTwo","onChangeTwo","ProfileText","ProfileList","useState","posts","setPosts","showInfo","setShowInfo","showPosts","setShowPosts","showUpdateProfileModal","setUpdateProfileModal","authCtx","useContext","AuthContext","profilePosts","useEffect","sort","b","Date","createdAt","getTime","sendAddFriendRequest","unFrndBtnHandler","friendId","_id","toString","data","console","log","onAdd","image","className","src","alt","name","active","friends","includes","userData","length","PostList","Profile","pid","useParams","setProfile","setProfilePosts","sendProfileRequest","fetchUser","user","updateUser","LoadingSpinner","center"],"mappings":"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","file":"static/js/8.50edaa5a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile-pic__img-container\":\"Profile_profile-pic__img-container__1aKaV\",\"show-detail__btn\":\"Profile_show-detail__btn__3Fdk0\",\"active\":\"Profile_active__vkGGC\",\"profile-info__container\":\"Profile_profile-info__container__2BwID\",\"profile-info__container-action\":\"Profile_profile-info__container-action__3eLZH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"UpdateProfile_footer__3gGpw\"};","import React, { Fragment } from 'react';\r\n\r\nimport classes from './UpdateProfile.module.css';\r\nimport Modal from '../UI/Modal/Modal';\r\nimport Button from '../UI/Button';\r\nimport Input from '../UI/Input/Input';\r\nimport useChange from '../../hooks/useChange';\r\nimport ErrorModal from '../UI/ErrorModal/ErrorModal';\r\nimport useHttp from '../../hooks/useHttp';\r\n\r\nconst UpdateProfile = (props) => {\r\n  const { value: bioValue, valueChangeHandler: bioChangeHandler } = useChange(\r\n    props.profile.bio\r\n  );\r\n\r\n  const {\r\n    value: relationshipValue,\r\n    valueChangeHandler: relationshipChangeHandler,\r\n  } = useChange(props.profile.relationship);\r\n\r\n  const { value: atValue, valueChangeHandler: atChangeHandler } = useChange(\r\n    props.profile.at\r\n  );\r\n\r\n  const {\r\n    value: occupationValue,\r\n    valueChangeHandler: occupationChangeHandler,\r\n  } = useChange(props.profile.occupation);\r\n\r\n  const { value: schoolValue, valueChangeHandler: schoolChangeHandler } =\r\n    useChange(props.profile.school);\r\n\r\n  const { value: collegeValue, valueChangeHandler: collegeChangeHandler } =\r\n    useChange(props.profile.college);\r\n\r\n  const {\r\n    isLoading,\r\n    error,\r\n    sendRequest: sendUpdateProfileRequest,\r\n    clearError,\r\n  } = useHttp();\r\n\r\n  const submitProfileHandler = async (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      await sendUpdateProfileRequest(\r\n        `${process.env.REACT_APP_BACKEND_URL}/users/${props.id}`,\r\n        'PATCH',\r\n        JSON.stringify({\r\n          school: schoolValue,\r\n          college: collegeValue,\r\n          at: atValue,\r\n          occupation: occupationValue,\r\n          bio: bioValue,\r\n          relationship: relationshipValue,\r\n        }),\r\n        {\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Bearer ${props.token}`,\r\n        }\r\n      );\r\n    } catch (err) {}\r\n\r\n    props.onUpdate();\r\n    props.onClose();\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      header=\"Update Profile\"\r\n      footer={\r\n        <Fragment>\r\n          <Button onClick={props.onClose} danger>\r\n            Close\r\n          </Button>\r\n          <Button type=\"submit\" inverse>\r\n            {isLoading ? 'Updating....' : 'Update'}\r\n          </Button>\r\n        </Fragment>\r\n      }\r\n      footerClass={classes.footer}\r\n      onClose={props.onClose}\r\n      onSubmit={submitProfileHandler}\r\n    >\r\n      <>\r\n        {error && (\r\n          <ErrorModal onClose={clearError} text={error} onlyBack overlay />\r\n        )}\r\n        <Input\r\n          for=\"bio\"\r\n          label=\"Bio\"\r\n          value={bioValue}\r\n          onChange={bioChangeHandler}\r\n        />\r\n        <Input\r\n          dual\r\n          label=\"Education\"\r\n          forOne=\"school\"\r\n          labelOne=\"School\"\r\n          valueOne={schoolValue}\r\n          onChangeOne={schoolChangeHandler}\r\n          forTwo=\"college\"\r\n          labelTwo=\"College\"\r\n          valueTwo={collegeValue}\r\n          onChangeTwo={collegeChangeHandler}\r\n        />\r\n        <Input\r\n          dual\r\n          label=\"Work\"\r\n          forOne=\"occupation\"\r\n          labelOne=\"Occupation\"\r\n          valueOne={occupationValue}\r\n          onChangeOne={occupationChangeHandler}\r\n          forTwo=\"at\"\r\n          labelTwo=\"At\"\r\n          valueTwo={atValue}\r\n          onChangeTwo={atChangeHandler}\r\n        />\r\n        <Input\r\n          for=\"relationship\"\r\n          label=\"Relationship\"\r\n          value={relationshipValue}\r\n          onChange={relationshipChangeHandler}\r\n        />\r\n      </>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default UpdateProfile;\r\n","import React from 'react';\r\n\r\nconst ProfileText = (props) => {\r\n  return (\r\n    <p>\r\n      <b>\r\n        <u>{props.label}</u>\r\n      </b>{' '}\r\n      <span>{props.text}</span>\r\n    </p>\r\n  );\r\n};\r\n\r\nexport default ProfileText;\r\n","import React, { Fragment, useContext, useEffect, useState } from 'react';\r\n\r\nimport classes from './Profile.module.css';\r\nimport PostList from '../Feed/post/PostList';\r\nimport Button from '../UI/Button';\r\nimport UpdateProfile from './UpdateProfile';\r\nimport ProfileText from './ProfileText';\r\nimport { AuthContext } from '../../store/auth-context';\r\nimport useHttp from '../../hooks/useHttp';\r\nimport ErrorModal from '../UI/ErrorModal/ErrorModal';\r\n\r\nconst ProfileList = (props) => {\r\n  const [posts, setPosts] = useState([]);\r\n  const [showInfo, setShowInfo] = useState(false);\r\n  const [showPosts, setShowPosts] = useState(true);\r\n  const [showUpdateProfileModal, setUpdateProfileModal] = useState(false);\r\n\r\n  const authCtx = useContext(AuthContext);\r\n\r\n  const { profile, profilePosts, token, id } = props;\r\n\r\n  useEffect(() => {\r\n    if (profilePosts) {\r\n      setPosts(\r\n        profilePosts.sort(\r\n          (a, b) =>\r\n            new Date(b.createdAt).getTime() - new Date(a.createdAt).getTime()\r\n        )\r\n      );\r\n    }\r\n  }, [profilePosts]);\r\n\r\n  const showProfileInfo = () => {\r\n    setShowPosts(false);\r\n    setShowInfo(true);\r\n  };\r\n\r\n  const openPosts = () => {\r\n    setShowInfo(false);\r\n    setShowPosts(true);\r\n  };\r\n\r\n  const openUpdateProfileModal = () => {\r\n    setUpdateProfileModal(true);\r\n  };\r\n\r\n  const closeUpdateProfileModal = () => {\r\n    setUpdateProfileModal(false);\r\n  };\r\n  const {\r\n    isLoading,\r\n    error,\r\n    sendRequest: sendAddFriendRequest,\r\n    clearError,\r\n  } = useHttp();\r\n\r\n  const unFrndBtnHandler = async (e) => {\r\n    try {\r\n      const data = await sendAddFriendRequest(\r\n        `${process.env.REACT_APP_BACKEND_URL}/users/friends/add/${id}`,\r\n        'PATCH',\r\n        JSON.stringify({ friendId: props.profile._id.toString() }),\r\n        {\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Bearer ${token}`,\r\n        }\r\n      );\r\n\r\n      console.log(data);\r\n      props.onAdd();\r\n    } catch (err) {}\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      {error && (\r\n        <ErrorModal onClose={clearError} text={error} onlyBack overlay />\r\n      )}\r\n      {showUpdateProfileModal && (\r\n        <UpdateProfile\r\n          onClose={closeUpdateProfileModal}\r\n          id={profile.id}\r\n          profile={profile}\r\n          onUpdate={props.onUpdate}\r\n          token={token}\r\n        />\r\n      )}\r\n      {props.profile.image && (\r\n        <div className={classes['profile-pic__img-container']}>\r\n          {!showPosts && (\r\n            <img\r\n              src={`${process.env.REACT_APP_ASSET_URL}/${props.profile.image}`}\r\n              alt={`${props.profile.name}_pic`}\r\n            />\r\n          )}\r\n          <h2>{props.profile.name}</h2>\r\n          {props.profile.bio && (\r\n            <p>\r\n              <i>{props.profile.bio}</i>\r\n            </p>\r\n          )}\r\n          <Button\r\n            className={`${classes['show-detail__btn']} ${\r\n              showInfo && classes.active\r\n            }`}\r\n            inverse\r\n            onClick={showProfileInfo}\r\n          >\r\n            Show Profile Info\r\n          </Button>\r\n          <Button\r\n            className={`${classes['show-detail__btn']} ${\r\n              showPosts && classes.active\r\n            }`}\r\n            inverse\r\n            onClick={openPosts}\r\n          >\r\n            Posts\r\n          </Button>\r\n        </div>\r\n      )}\r\n      <hr />\r\n      {showInfo && (\r\n        <div className={classes['profile-info__container']}>\r\n          <h1>Profile Info</h1>\r\n          <ProfileText\r\n            label=\"School:\"\r\n            text={profile.school ? profile.school : 'N.A.'}\r\n          />\r\n          <ProfileText\r\n            label=\"College:\"\r\n            text={profile.college ? profile.college : 'N.A.'}\r\n          />\r\n          <ProfileText\r\n            label=\"Work:\"\r\n            text={\r\n              profile.occupation || profile.at\r\n                ? `${profile.occupation} ${profile.at && 'at'} ${profile.at}`\r\n                : 'N.A.'\r\n            }\r\n          />\r\n          <ProfileText\r\n            label=\"Relationship:\"\r\n            text={profile.relationship ? profile.relationship : 'N.A.'}\r\n          />\r\n          <ProfileText\r\n            label=\"Friends:\"\r\n            text={\r\n              profile.friends.includes(authCtx.userData.id)\r\n                ? profile.friends.length > 1\r\n                  ? `have You and ${profile.friends.length - 1} more friends`\r\n                  : 'You are friends with him'\r\n                : `have ${profile.friends.length} Friends`\r\n            }\r\n          />\r\n        </div>\r\n      )}\r\n      {showInfo && (\r\n        <div className={classes['profile-info__container-action']}>\r\n          {authCtx.userData.id === profile.id && (\r\n            <Button onClick={openUpdateProfileModal}>Update Profile</Button>\r\n          )}\r\n          {authCtx.userData.id !== profile.id && (\r\n            <Button onClick={unFrndBtnHandler}>\r\n              {profile.friends.includes(authCtx.userData.id)\r\n                ? isLoading\r\n                  ? 'Unfriending...'\r\n                  : 'Unfriend'\r\n                : 'Add Friend'}\r\n            </Button>\r\n          )}\r\n        </div>\r\n      )}\r\n\r\n      {props.profile.image && showPosts && (\r\n        <PostList posts={posts} onUpdate={props.onUpdate} />\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default ProfileList;\r\n","import React, { useContext, useEffect, useState } from 'react';\r\n\r\nimport ProfileList from '../../Components/profile/Profile';\r\nimport { useParams } from 'react-router-dom';\r\nimport ErrorModal from '../../Components/UI/ErrorModal/ErrorModal';\r\nimport useHttp from '../../hooks/useHttp';\r\nimport LoadingSpinner from '../../Components/UI/LoadingSpinner/LoadingSpinner';\r\nimport { AuthContext } from '../../store/auth-context';\r\n\r\nconst Profile = () => {\r\n  const { pid } = useParams();\r\n\r\n  const [profile, setProfile] = useState({});\r\n  const [profilePosts, setProfilePosts] = useState([]);\r\n\r\n  const authCtx = useContext(AuthContext);\r\n\r\n  const { token } = authCtx;\r\n\r\n  const {\r\n    isLoading,\r\n    error,\r\n    sendRequest: sendProfileRequest,\r\n    clearError,\r\n  } = useHttp();\r\n\r\n  useEffect(() => {\r\n    const fetchUser = async () => {\r\n      try {\r\n        const data = await sendProfileRequest(\r\n          `${process.env.REACT_APP_BACKEND_URL}/users/${pid}`,\r\n          'GET',\r\n          null,\r\n          { Authorization: `Bearer ${token}` }\r\n        );\r\n\r\n        setProfile(data.user);\r\n        setProfilePosts([...data.posts]);\r\n      } catch (err) {}\r\n    };\r\n\r\n    fetchUser();\r\n  }, [pid, sendProfileRequest, token]);\r\n\r\n  const updateUser = () => {\r\n    const fetchUser = async () => {\r\n      try {\r\n        const data = await sendProfileRequest(\r\n          `${process.env.REACT_APP_BACKEND_URL}/users/${pid}`,\r\n          'GET',\r\n          null,\r\n          { Authorization: `Bearer ${token}` }\r\n        );\r\n\r\n        setProfile(data.user);\r\n        setProfilePosts([...data.posts]);\r\n      } catch (err) {}\r\n    };\r\n\r\n    fetchUser();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {error && (\r\n        <ErrorModal onClose={clearError} text={error} onlyBack overlay />\r\n      )}\r\n      {isLoading && <LoadingSpinner center />}\r\n      {profile && (\r\n        <ProfileList\r\n          profile={profile}\r\n          profilePosts={profilePosts}\r\n          onUpdate={updateUser}\r\n          onAdd={updateUser}\r\n          token={token}\r\n          id={authCtx.userData.id}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n"],"sourceRoot":""}