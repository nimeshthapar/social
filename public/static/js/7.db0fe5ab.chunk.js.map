{"version":3,"sources":["../node_modules/@mui/icons-material/PermMedia.js","../node_modules/@mui/icons-material/Room.js","../node_modules/@mui/icons-material/EmojiEmotions.js","Components/Feed/share/Share.module.css","Components/Feed/NewPost/NewPost.module.css","../node_modules/@mui/icons-material/ShortText.js","hooks/FocusNamedInputButton.js","Components/Feed/NewPost/NewPost.js","Components/Feed/share/Share.js","Pages/Feed/Feed.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","_createSvgIcon","_jsxRuntime","_default","jsx","d","module","useFocusNamedInputButton","clicked","useState","buttonIsClicked","setButtonIsClicked","openNewPostBtnHandler","useCallback","action","setTimeout","resetButtonClicked","closeFocusInputButton","NewPost","props","useChange","caption","captionInputValue","captionChangeHandler","valueChangeHandler","setCaptionInputValue","setValue","locationInputValue","locationChangeHandler","setLocationInputValue","feelingInputValue","feelingChangeHandler","setFeelingInputValue","useHttp","isLoading","error","sendNewPostRequest","sendRequest","clearError","photoIsClick","locationIsClick","feelingIsClick","shareIsClick","captionIsClicked","openNewPostCaptionBtnHandler","captionCloseButton","photoIsClicked","openNewPostPhotoBtnHandler","photoCloseButton","locationIsClicked","openNewPostLocationBtnHandler","locationCloseButton","feelingIsClicked","openNewPostFeelingBtnHandler","feelingCloseButton","captionRef","useRef","locationRef","imageRef","feelingRef","useEffect","current","click","focus","previewUrl","setPreviewUrl","file","setFile","fileReader","FileReader","onload","result","readAsDataURL","submitPostDataHandler","e","a","preventDefault","console","log","postFormData","FormData","append","id","process","Authorization","token","data","onAddPost","closeModal","ErrorModal","onClose","text","onlyBack","overlay","Modal","header","footer","Button","onClick","danger","type","inverse","onSubmit","className","classes","htmlFor","rows","placeholder","onChange","ref","bind","style","display","accept","pickedFile","target","files","length","src","alt","title","defaultValue","actions","color","Share","showCreatePostModal","setShowCreatePostModal","showErrorPromptModal","setErrorPromptModal","authCtx","useContext","AuthContext","photoClickReset","shareIsClicked","openNewPostShareBtnHandler","shareClickReset","locationClickReset","feelingClickReset","onConfirm","onAdd","userData","Card","image","name","Feed","posts","setPosts","page","setPage","totalPages","setTotalPages","updatedPost","setUpdatedPost","isLoggedIn","fetchPosts","fetchRequest","cleanUptimer","clearTimeout","io","on","post","requestHandler","PostList","onUpdate","onNext","prev","onPrev","LoadingSpinner","center"],"mappings":"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","file":"static/js/7.db0fe5ab.chunk.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M2 6H0v5h.01L0 20c0 1.1.9 2 2 2h18v-2H2V6zm20-2h-8l-2-2H6c-1.1 0-1.99.9-1.99 2L4 16c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zM7 15l4.5-6 3.5 4.51 2.5-3.01L21 15H7z\"\n}), 'PermMedia');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 2C8.13 2 5 5.13 5 9c0 5.25 7 13 7 13s7-7.75 7-13c0-3.87-3.13-7-7-7zm0 9.5c-1.38 0-2.5-1.12-2.5-2.5s1.12-2.5 2.5-2.5 2.5 1.12 2.5 2.5-1.12 2.5-2.5 2.5z\"\n}), 'Room');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M11.99 2C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM8.5 8c.83 0 1.5.67 1.5 1.5S9.33 11 8.5 11 7 10.33 7 9.5 7.67 8 8.5 8zM12 18c-2.28 0-4.22-1.66-5-4h10c-.78 2.34-2.72 4-5 4zm3.5-7c-.83 0-1.5-.67-1.5-1.5S14.67 8 15.5 8s1.5.67 1.5 1.5-.67 1.5-1.5 1.5z\"\n}), 'EmojiEmotions');\n\nexports.default = _default;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"share-container\":\"Share_share-container__2hShP\",\"img-container\":\"Share_img-container__3bjj-\",\"input-container\":\"Share_input-container__2nbYm\",\"share-actions\":\"Share_share-actions__T-dzA\",\"share-actions__action\":\"Share_share-actions__action__HevCs\",\"ui-button\":\"Share_ui-button__3UaGo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form-items__container\":\"NewPost_form-items__container__JVXoB\",\"form-items__input-container\":\"NewPost_form-items__input-container__s35yx\",\"actions\":\"NewPost_actions__2TaZz\",\"close-btn\":\"NewPost_close-btn__3bgFB\",\"image-upload__preview\":\"NewPost_image-upload__preview__3c0M3\"};","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M4 9h16v2H4V9zm0 4h10v2H4v-2z\"\n}), 'ShortText');\n\nexports.default = _default;","import { useCallback, useState } from 'react';\r\n\r\nconst useFocusNamedInputButton = (clicked) => {\r\n  const [buttonIsClicked, setButtonIsClicked] = useState(clicked || false);\r\n\r\n  const openNewPostBtnHandler = useCallback((action, value) => {\r\n    setButtonIsClicked(true);\r\n    setTimeout(() => {\r\n      action(value);\r\n    }, 100);\r\n  }, []);\r\n\r\n  const resetButtonClicked = useCallback(() => {\r\n    setButtonIsClicked(false);\r\n  }, []);\r\n\r\n  const closeFocusInputButton = useCallback((action, value) => {\r\n    setButtonIsClicked(false);\r\n    action(value);\r\n  }, []);\r\n  return {\r\n    buttonIsClicked,\r\n    openNewPostBtnHandler,\r\n    setButtonIsClicked,\r\n    closeFocusInputButton,\r\n    resetButtonClicked,\r\n  };\r\n};\r\n\r\nexport default useFocusNamedInputButton;\r\n","import React, { Fragment, useRef, useEffect, useState } from 'react';\r\n\r\nimport classes from './NewPost.module.css';\r\nimport Modal from '../../UI/Modal/Modal';\r\nimport Button from '../../UI/Button';\r\nimport useFocusNamedInputButton from '../../../hooks/FocusNamedInputButton';\r\nimport PermMediaIcon from '@mui/icons-material/PermMedia';\r\nimport RoomIcon from '@mui/icons-material/Room';\r\nimport EmojiEmotionsIcon from '@mui/icons-material/EmojiEmotions';\r\nimport ShortTextIcon from '@mui/icons-material/ShortText';\r\nimport useChange from '../../../hooks/useChange';\r\nimport useHttp from '../../../hooks/useHttp';\r\nimport ErrorModal from '../../UI/ErrorModal/ErrorModal';\r\n\r\nconst NewPost = (props) => {\r\n  const {\r\n    value: captionInputValue,\r\n    valueChangeHandler: captionChangeHandler,\r\n    setValue: setCaptionInputValue,\r\n  } = useChange(props.caption);\r\n  const {\r\n    value: locationInputValue,\r\n    valueChangeHandler: locationChangeHandler,\r\n    setValue: setLocationInputValue,\r\n  } = useChange();\r\n  const {\r\n    value: feelingInputValue,\r\n    valueChangeHandler: feelingChangeHandler,\r\n    setValue: setFeelingInputValue,\r\n  } = useChange();\r\n\r\n  const {\r\n    isLoading,\r\n    error,\r\n    sendRequest: sendNewPostRequest,\r\n    clearError,\r\n  } = useHttp();\r\n\r\n  const { photoIsClick, locationIsClick, feelingIsClick, shareIsClick } = props;\r\n\r\n  const {\r\n    buttonIsClicked: captionIsClicked,\r\n    openNewPostBtnHandler: openNewPostCaptionBtnHandler,\r\n    closeFocusInputButton: captionCloseButton,\r\n  } = useFocusNamedInputButton(props.shareIsClick);\r\n  const {\r\n    buttonIsClicked: photoIsClicked,\r\n    openNewPostBtnHandler: openNewPostPhotoBtnHandler,\r\n    closeFocusInputButton: photoCloseButton,\r\n  } = useFocusNamedInputButton(props.photoIsClick);\r\n  const {\r\n    buttonIsClicked: locationIsClicked,\r\n    openNewPostBtnHandler: openNewPostLocationBtnHandler,\r\n    closeFocusInputButton: locationCloseButton,\r\n  } = useFocusNamedInputButton(props.locationIsClick);\r\n  const {\r\n    buttonIsClicked: feelingIsClicked,\r\n    openNewPostBtnHandler: openNewPostFeelingBtnHandler,\r\n    closeFocusInputButton: feelingCloseButton,\r\n  } = useFocusNamedInputButton(props.feelingIsClick);\r\n\r\n  const captionRef = useRef();\r\n  const locationRef = useRef();\r\n  const imageRef = useRef();\r\n  const feelingRef = useRef();\r\n\r\n  useEffect(() => {\r\n    if (photoIsClick) {\r\n      return imageRef.current.click();\r\n    }\r\n\r\n    if (locationIsClick) {\r\n      return locationRef.current.focus();\r\n    }\r\n\r\n    if (feelingIsClick) {\r\n      return feelingRef.current.focus();\r\n    }\r\n\r\n    if (shareIsClick && captionRef) {\r\n      return captionRef.current.focus();\r\n    }\r\n  }, [photoIsClick, locationIsClick, feelingIsClick, shareIsClick, captionRef]);\r\n\r\n  const [previewUrl, setPreviewUrl] = useState();\r\n  const [file, setFile] = useState();\r\n\r\n  useEffect(() => {\r\n    if (!file) {\r\n      return;\r\n    }\r\n\r\n    const fileReader = new FileReader();\r\n    fileReader.onload = () => {\r\n      setPreviewUrl(fileReader.result);\r\n    };\r\n    fileReader.readAsDataURL(file);\r\n  }, [file]);\r\n\r\n  const imageChangeHandler = (e) => {\r\n    let pickedFile;\r\n    if (e.target.files || e.target.files.length === 1) {\r\n      pickedFile = e.target.files[0];\r\n      setFile(pickedFile);\r\n    }\r\n  };\r\n\r\n  const submitPostDataHandler = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (\r\n      !captionRef.current &&\r\n      !locationRef.current &&\r\n      !imageRef.current &&\r\n      !feelingRef.current\r\n    ) {\r\n      return console.log(\"You can't create post without attaching anything\");\r\n    }\r\n\r\n    let data;\r\n    try {\r\n      const postFormData = new FormData();\r\n\r\n      postFormData.append('caption', captionInputValue);\r\n      postFormData.append('location', locationInputValue);\r\n      postFormData.append('image', file);\r\n      postFormData.append('feeling', feelingInputValue);\r\n      postFormData.append('userId', props.id);\r\n\r\n      data = await sendNewPostRequest(\r\n        `${process.env.REACT_APP_BACKEND_URL}/posts/`,\r\n        'POST',\r\n        postFormData,\r\n        { Authorization: `Bearer ${props.token}` }\r\n      );\r\n    } catch (err) {}\r\n\r\n    if (!data) {\r\n      return;\r\n    }\r\n\r\n    setCaptionInputValue('');\r\n    setFeelingInputValue('');\r\n    setFile();\r\n    setLocationInputValue('');\r\n\r\n    props.onAddPost();\r\n    props.closeModal();\r\n  };\r\n  return (\r\n    <>\r\n      {error && (\r\n        <ErrorModal onClose={clearError} text={error} onlyBack overlay />\r\n      )}\r\n      <Modal\r\n        header=\"Create Post\"\r\n        footer={\r\n          <Fragment>\r\n            <Button onClick={props.onClose} danger>\r\n              Close\r\n            </Button>\r\n            <Button type=\"submit\" inverse>\r\n              {isLoading ? 'Creating....' : 'Create'}\r\n            </Button>\r\n          </Fragment>\r\n        }\r\n        onClose={props.onClose}\r\n        onSubmit={submitPostDataHandler}\r\n      >\r\n        <div className={classes['form-items__container']}>\r\n          {captionIsClicked && (\r\n            <div className={classes['form-items__input-container']}>\r\n              <label htmlFor=\"caption\">Caption</label>\r\n              <textarea\r\n                rows=\"3\"\r\n                placeholder=\"Write a Caption Text\"\r\n                onChange={captionChangeHandler}\r\n                value={captionInputValue}\r\n                ref={captionRef}\r\n              />\r\n              <button\r\n                onClick={captionCloseButton.bind(\r\n                  null,\r\n                  setCaptionInputValue,\r\n                  ''\r\n                )}\r\n                className={classes['close-btn']}\r\n              >\r\n                X\r\n              </button>\r\n            </div>\r\n          )}\r\n          {photoIsClicked && (\r\n            <div className={classes['form-items__input-container']}>\r\n              <label htmlFor=\"image\">Image</label>\r\n              <input\r\n                type=\"file\"\r\n                style={{ display: 'none' }}\r\n                accept=\".jpg,.jpeg,.png\"\r\n                placeholder=\"Pick an Image\"\r\n                ref={imageRef}\r\n                onChange={imageChangeHandler}\r\n              />\r\n              <div className={classes['image-upload__preview']}>\r\n                {previewUrl && <img src={previewUrl} alt=\"preveiw\" />}\r\n                {!previewUrl && <p>Please Pick an Image</p>}\r\n              </div>\r\n              <button\r\n                onClick={photoCloseButton.bind(null, setPreviewUrl, '')}\r\n                className={classes['close-btn']}\r\n              >\r\n                X\r\n              </button>\r\n            </div>\r\n          )}\r\n          {locationIsClicked && (\r\n            <div className={classes['form-items__input-container']}>\r\n              <label htmlFor=\"location\">Location</label>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Write your Location\"\r\n                ref={locationRef}\r\n                onChange={locationChangeHandler}\r\n                value={locationInputValue}\r\n              />\r\n              <button\r\n                onClick={locationCloseButton.bind(\r\n                  null,\r\n                  setLocationInputValue,\r\n                  ''\r\n                )}\r\n                className={classes['close-btn']}\r\n              >\r\n                X\r\n              </button>\r\n            </div>\r\n          )}\r\n          {feelingIsClicked && (\r\n            <div className={classes['form-items__input-container']}>\r\n              <label htmlFor=\"feeling\">Feeling</label>\r\n              <select\r\n                title=\"feelings\"\r\n                ref={feelingRef}\r\n                onChange={feelingChangeHandler}\r\n                value={feelingInputValue}\r\n              >\r\n                <option defaultValue>--Select an Option--</option>\r\n                <option>😊 Happy</option>\r\n                <option>🙁 Sad</option>\r\n                <option>🔥 Lit</option>\r\n                <option>😨 Scared</option>\r\n                <option>😷 Unwell</option>\r\n                <option>😍 In Love</option>\r\n                <option>😡 Angry</option>\r\n                <option>😄 Excited</option>\r\n                <option>🙏 Thankful</option>\r\n                <option>🤪 Crazy</option>\r\n                <option>😇 Blessed</option>\r\n                <option>😬 Awkward</option>\r\n              </select>\r\n              <button\r\n                onClick={feelingCloseButton.bind(\r\n                  null,\r\n                  setFeelingInputValue,\r\n                  ''\r\n                )}\r\n                className={classes['close-btn']}\r\n              >\r\n                X\r\n              </button>\r\n            </div>\r\n          )}\r\n          <div className={classes.actions}>\r\n            <button\r\n              type=\"button\"\r\n              className={classes['share-actions__action']}\r\n              onClick={openNewPostCaptionBtnHandler.bind(null, () => {\r\n                captionRef.current.focus();\r\n              })}\r\n            >\r\n              <ShortTextIcon style={{ color: 'rgb(110,55,27)' }} />\r\n              <span style={{ color: 'rgb(110,55,27)' }}>Caption</span>\r\n            </button>\r\n            <button\r\n              type=\"button\"\r\n              className={classes['share-actions__action']}\r\n              onClick={openNewPostPhotoBtnHandler.bind(null, () => {\r\n                imageRef.current.click();\r\n              })}\r\n            >\r\n              <PermMediaIcon style={{ color: 'green' }} />\r\n              <span style={{ color: 'green' }}>Photo</span>\r\n            </button>\r\n            <button\r\n              type=\"button\"\r\n              className={classes['share-actions__action']}\r\n              onClick={openNewPostLocationBtnHandler.bind(null, () => {\r\n                locationRef.current.focus();\r\n              })}\r\n            >\r\n              <RoomIcon />\r\n              <span>Location</span>\r\n            </button>\r\n            <button\r\n              type=\"button\"\r\n              className={classes['share-actions__action']}\r\n              onClick={openNewPostFeelingBtnHandler.bind(null, () => {\r\n                feelingRef.current.focus();\r\n              })}\r\n            >\r\n              <EmojiEmotionsIcon style={{ color: 'darkgoldenrod' }} />\r\n              <span style={{ color: 'darkgoldenrod' }}>Feeling</span>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NewPost;\r\n","import React, { Fragment, useContext, useRef, useState } from 'react';\r\n\r\nimport Card from '../../UI/Card';\r\nimport Button from '../../UI/Button';\r\nimport PermMediaIcon from '@mui/icons-material/PermMedia';\r\nimport RoomIcon from '@mui/icons-material/Room';\r\nimport EmojiEmotionsIcon from '@mui/icons-material/EmojiEmotions';\r\nimport SendIcon from '@mui/icons-material/Send';\r\nimport classes from './Share.module.css';\r\nimport NewPost from '../NewPost/NewPost';\r\nimport useFocusNamedInputButton from '../../../hooks/FocusNamedInputButton';\r\nimport ErrorModal from '../../UI/ErrorModal/ErrorModal';\r\nimport { AuthContext } from '../../../store/auth-context';\r\n\r\nconst Share = (props) => {\r\n  const [showCreatePostModal, setShowCreatePostModal] = useState(false);\r\n  const [showErrorPromptModal, setErrorPromptModal] = useState(false);\r\n\r\n  const authCtx = useContext(AuthContext);\r\n\r\n  const {\r\n    buttonIsClicked: photoIsClicked,\r\n    openNewPostBtnHandler: openNewPostPhotoBtnHandler,\r\n    resetButtonClicked: photoClickReset,\r\n  } = useFocusNamedInputButton();\r\n  const {\r\n    buttonIsClicked: shareIsClicked,\r\n    openNewPostBtnHandler: openNewPostShareBtnHandler,\r\n    resetButtonClicked: shareClickReset,\r\n  } = useFocusNamedInputButton();\r\n  const {\r\n    buttonIsClicked: locationIsClicked,\r\n    openNewPostBtnHandler: openNewPostLocationBtnHandler,\r\n    resetButtonClicked: locationClickReset,\r\n  } = useFocusNamedInputButton();\r\n  const {\r\n    buttonIsClicked: feelingIsClicked,\r\n    openNewPostBtnHandler: openNewPostFeelingBtnHandler,\r\n    resetButtonClicked: feelingClickReset,\r\n  } = useFocusNamedInputButton();\r\n\r\n  const captionRef = useRef();\r\n\r\n  const closeNewPostHandler = () => {\r\n    setShowCreatePostModal(false);\r\n    setErrorPromptModal(false);\r\n    photoClickReset();\r\n    locationClickReset();\r\n    feelingClickReset();\r\n    shareClickReset();\r\n  };\r\n\r\n  const openErrorPromptModal = () => {\r\n    setErrorPromptModal(true);\r\n  };\r\n\r\n  const closeErrorPromptModal = () => {\r\n    setErrorPromptModal(false);\r\n  };\r\n\r\n  const createModalCloseHanler = () => {\r\n    setShowCreatePostModal(false);\r\n  };\r\n\r\n  const submitCaptionHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    openNewPostShareBtnHandler(setShowCreatePostModal, true);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      {showErrorPromptModal && (\r\n        <ErrorModal\r\n          onConfirm={closeNewPostHandler}\r\n          onClose={closeErrorPromptModal}\r\n          text={\"All input you enter will delete and cant't be restored\"}\r\n          overlay\r\n        />\r\n      )}\r\n      {showCreatePostModal && (\r\n        <NewPost\r\n          onAddPost={props.onAdd}\r\n          onClose={openErrorPromptModal}\r\n          caption={captionRef.current.value}\r\n          photoIsClick={photoIsClicked}\r\n          locationIsClick={locationIsClicked}\r\n          feelingIsClick={feelingIsClicked}\r\n          shareIsClick={shareIsClicked}\r\n          closeModal={createModalCloseHanler}\r\n          id={authCtx.userData.id}\r\n          token={authCtx.token}\r\n        />\r\n      )}\r\n      <Card>\r\n        <div className={classes['share-container']}>\r\n          <div className={classes['img-container']}>\r\n            <img\r\n              src={`${process.env.REACT_APP_ASSET_URL}/${authCtx.userData.image}`}\r\n              alt={authCtx.userData.name}\r\n            />\r\n          </div>\r\n          <form onSubmit={submitCaptionHandler}>\r\n            <div className={classes['input-container']}>\r\n              <textarea\r\n                rows=\"3\"\r\n                placeholder={`What's on your mind, ${authCtx.userData.name}?`}\r\n                ref={captionRef}\r\n              />\r\n            </div>\r\n            <div className={classes['share-actions']}>\r\n              <button\r\n                type=\"button\"\r\n                className={classes['share-actions__action']}\r\n                onClick={openNewPostPhotoBtnHandler.bind(\r\n                  null,\r\n                  setShowCreatePostModal,\r\n                  true\r\n                )}\r\n              >\r\n                <PermMediaIcon style={{ color: 'green' }} />\r\n                <span style={{ color: 'green' }}>Photo</span>\r\n              </button>\r\n              <button\r\n                type=\"button\"\r\n                className={classes['share-actions__action']}\r\n                onClick={openNewPostLocationBtnHandler.bind(\r\n                  null,\r\n                  setShowCreatePostModal,\r\n                  true\r\n                )}\r\n              >\r\n                <RoomIcon />\r\n                <span>Location</span>\r\n              </button>\r\n              <button\r\n                type=\"button\"\r\n                className={classes['share-actions__action']}\r\n                onClick={openNewPostFeelingBtnHandler.bind(\r\n                  null,\r\n                  setShowCreatePostModal,\r\n                  true\r\n                )}\r\n              >\r\n                <EmojiEmotionsIcon style={{ color: 'darkgoldenrod' }} />\r\n                <span style={{ color: 'darkgoldenrod' }}>Feeling</span>\r\n              </button>\r\n              <Button className={classes['ui-button']} type={'submit'}>\r\n                <SendIcon />\r\n                <span>Share</span>\r\n              </Button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </Card>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Share;\r\n","import React, { Fragment, useState, useEffect, useContext } from 'react';\r\nimport { io } from 'socket.io-client';\r\n\r\nimport PostList from '../../Components/Feed/post/PostList';\r\nimport Share from '../../Components/Feed/share/Share';\r\nimport ErrorModal from '../../Components/UI/ErrorModal/ErrorModal';\r\nimport LoadingSpinner from '../../Components/UI/LoadingSpinner/LoadingSpinner';\r\nimport useHttp from '../../hooks/useHttp';\r\nimport { AuthContext } from '../../store/auth-context';\r\n\r\nconst Feed = () => {\r\n  const [posts, setPosts] = useState([]);\r\n  const [page, setPage] = useState(1);\r\n  const [totalPages, setTotalPages] = useState(1);\r\n  const [updatedPost, setUpdatedPost] = useState();\r\n\r\n  const { token, isLoggedIn } = useContext(AuthContext);\r\n\r\n  const { isLoading, error, sendRequest: fetchPosts, clearError } = useHttp();\r\n\r\n  useEffect(() => {\r\n    const fetchRequest = async () => {\r\n      if (isLoggedIn) {\r\n        try {\r\n          const data = await fetchPosts(\r\n            `${process.env.REACT_APP_BACKEND_URL}/posts/?page=${page}`,\r\n            'GET',\r\n            null,\r\n            { Authorization: `Bearer ${token}` }\r\n          );\r\n          setTotalPages(data.totalPages);\r\n          setPosts([...data.posts]);\r\n        } catch (err) {}\r\n      }\r\n    };\r\n\r\n    const cleanUptimer = setTimeout(() => {\r\n      fetchRequest();\r\n    });\r\n\r\n    return () => {\r\n      clearTimeout(cleanUptimer);\r\n    };\r\n  }, [fetchPosts, page, token, isLoggedIn]);\r\n\r\n  useEffect(() => {\r\n    const socket = io(process.env.REACT_APP_ASSET_URL);\r\n\r\n    socket.on('create-post', (data) => {\r\n      setUpdatedPost(data.post);\r\n    });\r\n  }, []);\r\n\r\n  const loadPrevPostsHandler = () => {\r\n    setPage((prev) => (prev > 1 ? prev - 1 : 1));\r\n  };\r\n\r\n  const loadMoreHandler = () => {\r\n    setPage((prev) => (prev <= totalPages ? prev + 1 : prev));\r\n  };\r\n\r\n  const requestHandler = async () => {\r\n    try {\r\n      const data = await fetchPosts(\r\n        `${process.env.REACT_APP_BACKEND_URL}/posts/?page=1`,\r\n        'GET',\r\n        null,\r\n        { Authorization: `Bearer ${token}` }\r\n      );\r\n      setTotalPages(data.totalPages);\r\n      setPosts([...data.posts]);\r\n    } catch (err) {}\r\n\r\n    setUpdatedPost(null);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      {error && (\r\n        <ErrorModal onClose={clearError} text={error} onlyBack overlay />\r\n      )}\r\n      <Share onAdd={requestHandler} />\r\n      {!isLoading && !error && (\r\n        <PostList\r\n          posts={posts}\r\n          onUpdate={requestHandler}\r\n          onNext={loadMoreHandler}\r\n          onPrev={loadPrevPostsHandler}\r\n          page={page}\r\n          totalPages={totalPages}\r\n          isLoading={isLoading}\r\n          updatedPost={updatedPost}\r\n        />\r\n      )}\r\n      {isLoading && <LoadingSpinner center />}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Feed;\r\n"],"sourceRoot":""}